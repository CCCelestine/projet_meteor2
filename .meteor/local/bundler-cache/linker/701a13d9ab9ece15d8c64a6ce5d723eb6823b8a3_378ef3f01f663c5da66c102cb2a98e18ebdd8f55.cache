[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nAccounts = Package['accounts-base'].Accounts;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nCollection2 = Package['aldeed:collection2'].Collection2;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\n_ = Package.underscore._;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"views\":{\"app\":{\"template.accueil.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// client/views/app/template.accueil.js                                                                  //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h2>Accueil</h2>\\n    \"), Blaze.View(\"lookup:setTitle\", function() {\n    return Spacebars.mustache(view.lookup(\"setTitle\"), \"Accueil\");\n  }) ];\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"base\":{\"template.layout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// client/views/base/template.layout.js                                                                  //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\n\nTemplate.__checkName(\"mainLayout\");\nTemplate[\"mainLayout\"] = new Template(\"Template.mainLayout\", (function() {\n  var view = this;\n  return [ HTML.HEAD(\"\\n        \", HTML.TITLE(\"GFaim\"), \"\\n        \", HTML.Raw('<meta charset=\"utf-8\">'), \"\\n    \"), \"\\n    \", HTML.BODY(\"\\n    \", Blaze.View(\"lookup:setTitle\", function() {\n    return Spacebars.mustache(view.lookup(\"setTitle\"));\n  }), \"\\n    \", HTML.DIV({\n    class: \"container\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", HTML.HEADER({\n    class: \"col-md-12 jumbotron\"\n  }, \"\\n                \", HTML.H1(\"\\n                    \", Blaze.View(\"lookup:getGlobal\", function() {\n    return Spacebars.mustache(view.lookup(\"getGlobal\"), \"appName\");\n  }), \" \", HTML.Raw(\"<br>\"), \"\\n                    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"getGlobal\"), \"appSlogan\");\n  }, function() {\n    return [ \"\\n                    \", HTML.SMALL({\n      class: \"slogan\"\n    }, Blaze.View(\"lookup:getGlobal\", function() {\n      return Spacebars.mustache(view.lookup(\"getGlobal\"), \"appSlogan\");\n    })), \"\\n                    \" ];\n  }), \"\\n\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", HTML.NAV({\n    class: \"col-md-3\"\n  }, Spacebars.include(view.lookupTemplate(\"menu\"))), \"\\n            \", HTML.SECTION({\n    class: \"col-md-9 well\"\n  }, Spacebars.include(view.lookupTemplate(\"yield\"))), \"\\n        \"), \"\\n        \", HTML.Raw('<div class=\"row\">\\n            <footer class=\"col-md-12\">\\n                <hr>\\n                <div class=\"footer\">\\n                    <p>Propulsé par Meteor.js !</p>\\n                </div>\\n            </footer>\\n        </div>'), \"\\n    \"), \"\\n    \") ];\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.menu.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// client/views/base/template.menu.js                                                                    //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\n\nTemplate.__checkName(\"menu\");\nTemplate[\"menu\"] = new Template(\"Template.menu\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>Menu</h3>\\n    \"), HTML.UL({\n    class: \"nav nav-pills nav-stacked\"\n  }, \"\\n        \", HTML.LI(HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n        route: \"accueil\"\n      }));\n    }\n  }, \"Accueil\")), \"\\n    \"), HTML.Raw('\\n    <h3>Mon compte</h3>\\n    <ul class=\"nav nav-pills nav-stacked\">\\n        <li>Menu utilisé plus tard</li>\\n    </ul>') ];\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"config\":{\"Helpers.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// client/config/Helpers.js                                                                              //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nUI.registerHelper('getGlobal', function (varName) {\n  return Globals[varName];\n});\nUI.registerHelper('setTitle', function (title) {\n  if (!title) {\n    title = Globals.appName;\n  } else {\n    title += \" - \" + Globals.appName;\n  }\n\n  document.title = title;\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"Globals.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// lib/Globals.js                                                                                        //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nGlobals = {\n  appName: \"GFaim\",\n  appSlogan: \"L'application qui comble votre faim !\",\n  // Nous stockerons également nos schémas ici\n  schemas: {}\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Utils.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// lib/Utils.js                                                                                          //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nUtils = {\n  formatDate: function (date) {\n    var date = new Date(date);\n    var day = date.getDate().toString();\n    var month = (date.getMonth() + 1).toString();\n    var year = date.getFullYear();\n\n    if (day.length === 1) {\n      day = '0' + day;\n    }\n\n    if (month.length === 1) {\n      month = '0' + month;\n    }\n\n    return day + '/' + month + '/' + year;\n  },\n  pathFor: function (routeName, params) {\n    // Similaire au helper \"pathFor\", mais utilisable directement dans le code\n    var route = Router.routes[routeName].path(params);\n    return route;\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"routeur.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// lib/routeur.js                                                                                        //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nRouter.configure({\n  layoutTemplate: 'mainLayout'\n});\nRouter.route('/', {\n  name: 'accueil',\n  template: \"accueil\"\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/views/app/template.accueil.js\");\nrequire(\"/client/views/base/template.layout.js\");\nrequire(\"/client/views/base/template.menu.js\");\nrequire(\"/lib/Globals.js\");\nrequire(\"/lib/Utils.js\");\nrequire(\"/lib/routeur.js\");\nrequire(\"/client/config/Helpers.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/config/Helpers.js","lib/Globals.js","lib/Utils.js","lib/routeur.js"],"names":["UI","registerHelper","varName","Globals","title","appName","document","appSlogan","schemas","Utils","formatDate","date","Date","day","getDate","toString","month","getMonth","year","getFullYear","length","pathFor","routeName","params","route","Router","routes","path","configure","layoutTemplate","name","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,GAAGC,cAAH,CAAkB,WAAlB,EAA+B,UAASC,OAAT,EAAkB;AAC7C,SAAOC,QAAQD,OAAR,CAAP;AACH,CAFD;AAIAF,GAAGC,cAAH,CAAkB,UAAlB,EAA8B,UAASG,KAAT,EAAe;AACzC,MAAG,CAACA,KAAJ,EAAU;AACNA,YAAQD,QAAQE,OAAhB;AACH,GAFD,MAGI;AACAD,aAAS,QAAQD,QAAQE,OAAzB;AACH;;AAEDC,WAASF,KAAT,GAAiBA,KAAjB;AACH,CATD,E;;;;;;;;;;;ACJAD,UAAU;AACNE,WAAS,OADH;AAENE,aAAW,uCAFL;AAGN;AACAC,WAAS;AAJH,CAAV,C;;;;;;;;;;;ACAAC,QAAQ;AACJC,cAAY,UAASC,IAAT,EAAe;AACvB,QAAIA,OAAO,IAAIC,IAAJ,CAASD,IAAT,CAAX;AAEA,QAAIE,MAAMF,KAAKG,OAAL,GAAeC,QAAf,EAAV;AACA,QAAIC,QAAQ,CAACL,KAAKM,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAAZ;AACA,QAAIG,OAAOP,KAAKQ,WAAL,EAAX;;AAEA,QAAIN,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAClBP,YAAM,MAAMA,GAAZ;AACH;;AAED,QAAIG,MAAMI,MAAN,KAAiB,CAArB,EAAwB;AACpBJ,cAAQ,MAAMA,KAAd;AACH;;AAED,WAAOH,MAAM,GAAN,GAAYG,KAAZ,GAAoB,GAApB,GAA0BE,IAAjC;AACH,GAjBG;AAmBJG,WAAS,UAASC,SAAT,EAAoBC,MAApB,EAA2B;AAChC;AACA,QAAIC,QAAQC,OAAOC,MAAP,CAAcJ,SAAd,EAAyBK,IAAzB,CAA8BJ,MAA9B,CAAZ;AACA,WAAOC,KAAP;AACH;AAvBG,CAAR,C;;;;;;;;;;;ACAAC,OAAOG,SAAP,CAAiB;AACbC,kBAAgB;AADH,CAAjB;AAIAJ,OAAOD,KAAP,CAAa,GAAb,EAAkB;AACdM,QAAM,SADQ;AAEdC,YAAU;AAFI,CAAlB,E","file":"/app.js","sourcesContent":["UI.registerHelper('getGlobal', function(varName) {\r\n    return Globals[varName];\r\n});\r\n\r\nUI.registerHelper('setTitle', function(title){\r\n    if(!title){\r\n        title = Globals.appName;\r\n    }\r\n    else{\r\n        title += \" - \" + Globals.appName;\r\n    }\r\n\r\n    document.title = title;\r\n});\r\n\r\n","Globals = {\r\n    appName: \"GFaim\",\r\n    appSlogan: \"L'application qui comble votre faim !\",\r\n    // Nous stockerons également nos schémas ici\r\n    schemas: {}\r\n};","Utils = {\r\n    formatDate: function(date) {\r\n        var date = new Date(date);\r\n\r\n        var day = date.getDate().toString();\r\n        var month = (date.getMonth() + 1).toString();\r\n        var year = date.getFullYear();\r\n\r\n        if (day.length === 1) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        if (month.length === 1) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        return day + '/' + month + '/' + year;\r\n    },\r\n\r\n    pathFor: function(routeName, params){\r\n        // Similaire au helper \"pathFor\", mais utilisable directement dans le code\r\n        var route = Router.routes[routeName].path(params);\r\n        return route;\r\n    }\r\n};","Router.configure({\r\n    layoutTemplate: 'mainLayout'\r\n});\r\n\r\nRouter.route('/', {\r\n    name: 'accueil',\r\n    template: \"accueil\"\r\n});\r\n"]}}]