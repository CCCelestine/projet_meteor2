[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nAccounts = Package['accounts-base'].Accounts;\nCollection2 = Package['aldeed:collection2'].Collection2;\n_ = Package.underscore._;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"Globals.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// lib/Globals.js                                                              //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nGlobals = {\n  appName: \"GFaim\",\n  appSlogan: \"L'application qui comble votre faim !\",\n  // Nous stockerons également nos schémas ici\n  schemas: {}\n};\n/////////////////////////////////////////////////////////////////////////////////\n\n},\"Utils.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// lib/Utils.js                                                                //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nUtils = {\n  formatDate: function (date) {\n    var date = new Date(date);\n    var day = date.getDate().toString();\n    var month = (date.getMonth() + 1).toString();\n    var year = date.getFullYear();\n\n    if (day.length === 1) {\n      day = '0' + day;\n    }\n\n    if (month.length === 1) {\n      month = '0' + month;\n    }\n\n    return day + '/' + month + '/' + year;\n  },\n  pathFor: function (routeName, params) {\n    // Similaire au helper \"pathFor\", mais utilisable directement dans le code\n    var route = Router.routes[routeName].path(params);\n    return route;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////\n\n},\"routeur.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// lib/routeur.js                                                              //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nRouter.configure({\n  layoutTemplate: 'mainLayout'\n});\nRouter.route('/', {\n  name: 'accueil',\n  template: \"accueil\"\n});\nRouter.route('/register', {\n  name: \"user.register\",\n  //name: \"register\",\n  template: \"register\"\n});\nRouter.route('/login', {\n  name: \"user.login\",\n  //name: \"login\",\n  template: \"login\"\n});\nRouter.route('/loggedInHome', {\n  name: \"loggedInHome\",\n  template: \"loggedInHome\"\n});\nRouter.route('/commerces', {\n  name: \"commerces\",\n  template: \"commerces\"\n});\n/*Router.route('/commerces/:_id', {\n    name: \"commerces\",\n        data: function(){\n            return {\n                id: this.params._id\n            }\n        },\n    template: \"commerces\"\n});*/\n/////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Commerces.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// collections/Commerces.js                                                    //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\n//SimpleSchema.extendOptions(['autoform']);\n//SimpleSchema.extendOptions(['denyUpdate']);\nCommerces = new Mongo.Collection('commerces');\nCommerces.attachSchema(new SimpleSchema({\n  _id: {\n    //idGeneration:,\n    type: String,\n    label: \"ID\"\n  },\n  name: {\n    type: String,\n    label: \"Nom\"\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// server/main.js                                                              //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\n/////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"/lib/Globals.js\");\nrequire(\"/lib/Utils.js\");\nrequire(\"/lib/routeur.js\");\nrequire(\"/collections/Commerces.js\");\nrequire(\"/server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["lib/Globals.js","lib/Utils.js","lib/routeur.js","collections/Commerces.js","server/main.js"],"names":["Globals","appName","appSlogan","schemas","Utils","formatDate","date","Date","day","getDate","toString","month","getMonth","year","getFullYear","length","pathFor","routeName","params","route","Router","routes","path","configure","layoutTemplate","name","template","SimpleSchema","module","watch","require","default","v","Commerces","Mongo","Collection","attachSchema","_id","type","String","label","Meteor","startup"],"mappings":";;;;;;;;AAAAA,UAAU;AACNC,WAAS,OADH;AAENC,aAAW,uCAFL;AAGN;AACAC,WAAS;AAJH,CAAV,C;;;;;;;;;;;ACAAC,QAAQ;AACJC,cAAY,UAASC,IAAT,EAAe;AACvB,QAAIA,OAAO,IAAIC,IAAJ,CAASD,IAAT,CAAX;AAEA,QAAIE,MAAMF,KAAKG,OAAL,GAAeC,QAAf,EAAV;AACA,QAAIC,QAAQ,CAACL,KAAKM,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAAZ;AACA,QAAIG,OAAOP,KAAKQ,WAAL,EAAX;;AAEA,QAAIN,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAClBP,YAAM,MAAMA,GAAZ;AACH;;AAED,QAAIG,MAAMI,MAAN,KAAiB,CAArB,EAAwB;AACpBJ,cAAQ,MAAMA,KAAd;AACH;;AAED,WAAOH,MAAM,GAAN,GAAYG,KAAZ,GAAoB,GAApB,GAA0BE,IAAjC;AACH,GAjBG;AAmBJG,WAAS,UAASC,SAAT,EAAoBC,MAApB,EAA2B;AAChC;AACA,QAAIC,QAAQC,OAAOC,MAAP,CAAcJ,SAAd,EAAyBK,IAAzB,CAA8BJ,MAA9B,CAAZ;AACA,WAAOC,KAAP;AACH;AAvBG,CAAR,C;;;;;;;;;;;ACAAC,OAAOG,SAAP,CAAiB;AACbC,kBAAgB;AADH,CAAjB;AAIAJ,OAAOD,KAAP,CAAa,GAAb,EAAkB;AACdM,QAAM,SADQ;AAEdC,YAAU;AAFI,CAAlB;AAKAN,OAAOD,KAAP,CAAa,WAAb,EAA0B;AACtBM,QAAM,eADgB;AAEtB;AACAC,YAAU;AAHY,CAA1B;AAMAN,OAAOD,KAAP,CAAa,QAAb,EAAuB;AACnBM,QAAM,YADa;AAEnB;AACAC,YAAU;AAHS,CAAvB;AAMAN,OAAOD,KAAP,CAAa,eAAb,EAA8B;AAC1BM,QAAM,cADoB;AAE1BC,YAAU;AAFgB,CAA9B;AAKAN,OAAOD,KAAP,CAAa,YAAb,EAA2B;AACvBM,QAAM,WADiB;AAEvBC,YAAU;AAFa,CAA3B;AAKA;;;;;;;;;;;;;;;;;;;AC/BA,IAAIC,YAAJ;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACL,mBAAaK,CAAb;AAAe;;AAA3B,CAArC,EAAkE,CAAlE;AACjB;AACA;AAEAC,YAAY,IAAIC,MAAMC,UAAV,CAAqB,WAArB,CAAZ;AAEAF,UAAUG,YAAV,CAAuB,IAAIT,YAAJ,CAAiB;AACpCU,OAAK;AACD;AACAC,UAAMC,MAFL;AAGDC,WAAO;AAHN,GAD+B;AAMpCf,QAAM;AACFa,UAAMC,MADJ;AAEFC,WAAO;AAFL;AAN8B,CAAjB,CAAvB,E;;;;;;;;;;;ACNA,IAAIC,MAAJ;AAAWb,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACW,SAAOT,CAAP,EAAS;AAACS,aAAOT,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAEXS,OAAOC,OAAP,CAAe,MAAM,CACnB;AACD,CAFD,E","file":"/app.js","sourcesContent":["Globals = {\r\n    appName: \"GFaim\",\r\n    appSlogan: \"L'application qui comble votre faim !\",\r\n    // Nous stockerons également nos schémas ici\r\n    schemas: {}\r\n};","Utils = {\r\n    formatDate: function(date) {\r\n        var date = new Date(date);\r\n\r\n        var day = date.getDate().toString();\r\n        var month = (date.getMonth() + 1).toString();\r\n        var year = date.getFullYear();\r\n\r\n        if (day.length === 1) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        if (month.length === 1) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        return day + '/' + month + '/' + year;\r\n    },\r\n\r\n    pathFor: function(routeName, params){\r\n        // Similaire au helper \"pathFor\", mais utilisable directement dans le code\r\n        var route = Router.routes[routeName].path(params);\r\n        return route;\r\n    }\r\n};","Router.configure({\r\n    layoutTemplate: 'mainLayout'\r\n});\r\n\r\nRouter.route('/', {\r\n    name: 'accueil',\r\n    template: \"accueil\"\r\n});\r\n\r\nRouter.route('/register', {\r\n    name: \"user.register\",\r\n    //name: \"register\",\r\n    template: \"register\"\r\n});\r\n\r\nRouter.route('/login', {\r\n    name: \"user.login\",\r\n    //name: \"login\",\r\n    template: \"login\"\r\n});\r\n\r\nRouter.route('/loggedInHome', {\r\n    name: \"loggedInHome\",\r\n    template: \"loggedInHome\"\r\n});\r\n\r\nRouter.route('/commerces', {\r\n    name: \"commerces\",\r\n    template: \"commerces\"\r\n});\r\n\r\n/*Router.route('/commerces/:_id', {\r\n    name: \"commerces\",\r\n        data: function(){\r\n            return {\r\n                id: this.params._id\r\n            }\r\n        },\r\n    template: \"commerces\"\r\n});*/\r\n","import SimpleSchema from 'simpl-schema';\r\n//SimpleSchema.extendOptions(['autoform']);\r\n//SimpleSchema.extendOptions(['denyUpdate']);\r\n\r\nCommerces = new Mongo.Collection('commerces');\r\n\r\nCommerces.attachSchema(new SimpleSchema({\r\n    _id: {\r\n        //idGeneration:,\r\n        type: String,\r\n        label: \"ID\"\r\n    },\r\n    name: {\r\n        type: String,\r\n        label: \"Nom\"\r\n    }\r\n}));","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]