[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nAccounts = Package['accounts-base'].Accounts;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nCollection2 = Package['aldeed:collection2'].Collection2;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\n_ = Package.underscore._;\nRoles = Package['alanning:roles'].Roles;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"views\":{\"app\":{\"template.accueil.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/views/app/template.accueil.js                                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h2>Accueil</h2>\\n    \"), Blaze.View(\"lookup:setTitle\", function() {\n    return Spacebars.mustache(view.lookup(\"setTitle\"), \"Accueil\");\n  }) ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"base\":{\"template.layout.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/views/base/template.layout.js                                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n\nTemplate.__checkName(\"mainLayout\");\nTemplate[\"mainLayout\"] = new Template(\"Template.mainLayout\", (function() {\n  var view = this;\n  return [ HTML.HEAD(\"\\n        \", HTML.TITLE(\"GFaim\"), \"\\n        \", HTML.Raw('<meta charset=\"utf-8\">'), \"\\n    \"), \"\\n    \", HTML.BODY(\"\\n    \", Blaze.View(\"lookup:setTitle\", function() {\n    return Spacebars.mustache(view.lookup(\"setTitle\"));\n  }), \"\\n    \", HTML.DIV({\n    class: \"container\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", HTML.HEADER({\n    class: \"col-md-12 jumbotron\"\n  }, \"\\n                \", HTML.H1(\"\\n                    \", Blaze.View(\"lookup:getGlobal\", function() {\n    return Spacebars.mustache(view.lookup(\"getGlobal\"), \"appName\");\n  }), \" \", HTML.Raw(\"<br>\"), \"\\n                    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"getGlobal\"), \"appSlogan\");\n  }, function() {\n    return [ \"\\n                    \", HTML.SMALL({\n      class: \"slogan\"\n    }, Blaze.View(\"lookup:getGlobal\", function() {\n      return Spacebars.mustache(view.lookup(\"getGlobal\"), \"appSlogan\");\n    })), \"\\n                    \" ];\n  }), \"\\n\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", HTML.NAV({\n    class: \"col-md-3\"\n  }, Spacebars.include(view.lookupTemplate(\"menu\"))), \"\\n            \", HTML.SECTION({\n    class: \"col-md-9 well\"\n  }, Spacebars.include(view.lookupTemplate(\"yield\"))), \"\\n        \"), \"\\n        \", HTML.Raw('<div class=\"row\">\\n            <footer class=\"col-md-12\">\\n                <hr>\\n                <div class=\"footer\">\\n                    <p>Propulsé par Meteor.js !</p>\\n                </div>\\n            </footer>\\n        </div>'), \"\\n    \"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.menu.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/views/base/template.menu.js                                                                      //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n\nTemplate.__checkName(\"menu\");\nTemplate[\"menu\"] = new Template(\"Template.menu\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>Menu</h3>\\n    \"), HTML.UL({\n    class: \"nav nav-pills nav-stacked\"\n  }, \"\\n        \", HTML.LI(HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n        route: \"accueil\"\n      }));\n    }\n  }, \"Accueil\")), \"\\n    \"), HTML.Raw('\\n    <h3>Mon compte</h3>\\n    <ul class=\"nav nav-pills nav-stacked\">\\n        <li>Menu utilisé plus tard</li>\\n    </ul>') ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"users\":{\"template.login.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/views/users/template.login.js                                                                //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n\nTemplate.__checkName(\"connexion\");\nTemplate[\"connexion\"] = new Template(\"Template.connexion\", (function() {\n  var view = this;\n  return [ HTML.Raw('<h1 class=\"text-center\">Se connecter</h1>\\n    '), HTML.FORM(\"\\n        \", HTML.Raw('<div class=\"form-group\">\\n            <label for=\"username\">Nom d\\'utilisateur ou email</label>\\n            <input id=\"username\" class=\"form-control\" type=\"text\">\\n        </div>'), \"\\n        \", HTML.Raw('<div class=\"form-group\">\\n            <label for=\"password\">Mot de passe</label>\\n            <input id=\"password\" class=\"form-control\" type=\"password\">\\n        </div>'), \"\\n        \", HTML.P(HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n        route: \"user.enreg\"\n      }));\n    }\n  }, \"Pas encore membre ?\")), \"\\n        \", HTML.Raw('<button class=\"btn btn-primary\">Connexion</button>'), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.enreg.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/views/users/template.enreg.js                                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n\nTemplate.__checkName(\"enreg\");\nTemplate[\"enreg\"] = new Template(\"Template.enreg\", (function() {\n  var view = this;\n  return [ HTML.Raw('<h1 class=\"text-center\">Enregistrement</h1>\\n    '), Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Meteor.users\"),\n      id: Spacebars.call(\"insertUser\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n    \", HTML.FIELDSET(\"\\n        \", HTML.LEGEND(\"Informations obligatoires\"), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"username\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"confirmation\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"emails\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n    \"), \"\\n    \", HTML.FIELDSET(\"\\n        \", HTML.LEGEND(\"Informations facultatives\"), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.firstName\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.lastName\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.birthDay\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.gender\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.organization\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.website\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"profile.bio\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n    \"), \"\\n    \", HTML.BUTTON({\n        type: \"submit\",\n        class: \"btn btn-primary\"\n      }, \"Valider\"), \"\\n    \" ];\n    });\n  }) ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"config\":{\"FormHooks\":{\"Users.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/config/FormHooks/Users.js                                                                        //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nAutoForm.hooks({\n  'insertUser': {\n    onSubmit: function (doc) {\n      // Gestion du formulaire d'inscription\n      console.log(doc);\n      var error = null;\n      var password = doc.password;\n      var email = doc.emails[0].address;\n      Accounts.createUser({\n        username: doc.username,\n        email: email,\n        password: password,\n        profile: doc.profile ? doc.profile : {}\n      }, function (err) {\n        if (err) {\n          error = new Error(\"Une erreur s'est produite\");\n        }\n      });\n\n      if (error === null) {\n        this.done(); // Appelle onSuccess\n      } else {\n        this.done(error); // Appelle onError\n      }\n\n      return false; // Dans tout les cas, arrete la soumission des donneés.\n    },\n    onSuccess: function () {\n      Router.go(Utils.pathFor('accueil'));\n    },\n    onError: function (formType, err) {\n      alert(err.reason);\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Helpers.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// client/config/Helpers.js                                                                                //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nUI.registerHelper('getGlobal', function (varName) {\n  return Globals[varName];\n});\nUI.registerHelper('setTitle', function (title) {\n  if (!title) {\n    title = Globals.appName;\n  } else {\n    title += \" - \" + Globals.appName;\n  }\n\n  document.title = title;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"Globals.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// lib/Globals.js                                                                                          //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nGlobals = {\n  appName: \"GFaim\",\n  appSlogan: \"L'application qui comble votre faim !\",\n  // Nous stockerons également nos schémas ici\n  schemas: {}\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Utils.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// lib/Utils.js                                                                                            //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nUtils = {\n  formatDate: function (date) {\n    var date = new Date(date);\n    var day = date.getDate().toString();\n    var month = (date.getMonth() + 1).toString();\n    var year = date.getFullYear();\n\n    if (day.length === 1) {\n      day = '0' + day;\n    }\n\n    if (month.length === 1) {\n      month = '0' + month;\n    }\n\n    return day + '/' + month + '/' + year;\n  },\n  pathFor: function (routeName, params) {\n    // Similaire au helper \"pathFor\", mais utilisable directement dans le code\n    var route = Router.routes[routeName].path(params);\n    return route;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"routeur.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// lib/routeur.js                                                                                          //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nRouter.configure({\n  layoutTemplate: 'mainLayout'\n});\nRouter.route('/', {\n  name: 'accueil',\n  template: \"accueil\"\n});\nRouter.route('/enreg', {\n  name: \"user.enreg\",\n  template: \"enreg\"\n});\nRouter.route('/connexion', {\n  name: \"user.connexion\",\n  template: \"connexion\"\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Users.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// collections/Users.js                                                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n// Schéma du profil\nGlobals.schemas.UserProfile = new SimpleSchema({\n  firstName: {\n    type: String,\n    regEx: /^[a-zA-Z-]{2,25}/,\n    optional: true,\n    label: \"Prénom\"\n  },\n  lastName: {\n    type: String,\n    regEx: /^[a-zA-Z-]{2,25}/,\n    optional: true,\n    label: \"Nom\"\n  },\n  birthDay: {\n    type: Date,\n    optional: true,\n    label: \"Date de naissance\"\n  },\n  gender: {\n    type: String,\n    allowedValues: ['M', 'F'],\n    optional: true,\n    label: \"Genre\",\n    autoform: {\n      afFieldInput: {\n        type: \"select2\",\n        // type de champ particulier, voir plus bas\n        options: [{\n          value: \"M\",\n          label: \"Homme\"\n        }, {\n          value: \"F\",\n          label: \"Femme\"\n        }]\n      }\n    }\n  },\n  organization: {\n    type: String,\n    regEx: /^[a-z0-9A-Z .]{3,30}$/,\n    optional: true,\n    label: \"Organisation\"\n  },\n  website: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true,\n    label: \"Site Web\"\n  },\n  bio: {\n    type: String,\n    optional: true,\n    label: \"Biographie\",\n    autoform: {\n      afFieldInput: {\n        type: \"textarea\"\n      }\n    }\n  }\n}); // Schéma principal\n\nGlobals.schemas.User = new SimpleSchema({\n  username: {\n    type: String,\n    regEx: /^[a-z0-9A-Z_]{3,15}$/,\n    label: \"Nom d'utilisateur\"\n  },\n  password: {\n    type: String,\n    label: \"Mot de passe\",\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: \"password\"\n      }\n    }\n  },\n  confirmation: {\n    type: String,\n    label: \"Confirmation\",\n    optional: true,\n    custom: function () {\n      if (this.value !== this.field('password').value) {\n        return \"passwordMissmatch\";\n      }\n    },\n    autoform: {\n      afFieldInput: {\n        type: \"password\"\n      }\n    }\n  },\n  emails: {\n    type: [Object],\n    optional: false,\n    label: \"Adresses Email\"\n  },\n  \"emails.$.address\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    label: \"Adresse\"\n  },\n  \"emails.$.verified\": {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else {\n        this.unset();\n      }\n    },\n    autoform: {\n      omit: true\n    }\n  },\n  profile: {\n    type: Globals.schemas.UserProfile,\n    optional: true\n  },\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n    autoform: {\n      omit: true\n    }\n  },\n  roles: {\n    type: [String],\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n}); // On attache ce schéma à la collection\n\nMeteor.users.attachSchema(Globals.schemas.User);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/views/app/template.accueil.js\");\nrequire(\"/client/views/base/template.layout.js\");\nrequire(\"/client/views/base/template.menu.js\");\nrequire(\"/client/views/users/template.login.js\");\nrequire(\"/client/views/users/template.enreg.js\");\nrequire(\"/lib/Globals.js\");\nrequire(\"/lib/Utils.js\");\nrequire(\"/lib/routeur.js\");\nrequire(\"/client/config/FormHooks/Users.js\");\nrequire(\"/client/config/Helpers.js\");\nrequire(\"/collections/Users.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/config/FormHooks/Users.js","client/config/Helpers.js","lib/Globals.js","lib/Utils.js","lib/routeur.js","collections/Users.js"],"names":["AutoForm","hooks","onSubmit","doc","console","log","error","password","email","emails","address","Accounts","createUser","username","profile","err","Error","done","onSuccess","Router","go","Utils","pathFor","onError","formType","alert","reason","UI","registerHelper","varName","Globals","title","appName","document","appSlogan","schemas","formatDate","date","Date","day","getDate","toString","month","getMonth","year","getFullYear","length","routeName","params","route","routes","path","configure","layoutTemplate","name","template","UserProfile","SimpleSchema","firstName","type","String","regEx","optional","label","lastName","birthDay","gender","allowedValues","autoform","afFieldInput","options","value","organization","website","RegEx","Url","bio","User","confirmation","custom","field","Object","Email","Boolean","omit","createdAt","autoValue","isInsert","unset","services","blackbox","roles","Meteor","users","attachSchema"],"mappings":"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","file":"/app.js","sourcesContent":["AutoForm.hooks({\r\n    'insertUser': {\r\n        onSubmit: function(doc){ // Gestion du formulaire d'inscription\r\n            console.log(doc);\r\n            var error = null;\r\n            var password = doc.password;\r\n            var email = doc.emails[0].address;\r\n            Accounts.createUser({\r\n                username: doc.username,\r\n                email: email,\r\n                password: password,\r\n                profile: doc.profile ? doc.profile : {}\r\n            }, function(err){\r\n                if(err){\r\n                    error = new Error(\"Une erreur s'est produite\");\r\n                }\r\n            });\r\n\r\n            if(error === null){\r\n                this.done(); // Appelle onSuccess\r\n            }\r\n            else{\r\n                this.done(error); // Appelle onError\r\n            }\r\n\r\n            return false; // Dans tout les cas, arrete la soumission des donneés.\r\n        },\r\n\r\n        onSuccess: function(){\r\n            Router.go(Utils.pathFor('accueil'));\r\n        },\r\n\r\n        onError: function(formType, err){\r\n            alert(err.reason)\r\n        }\r\n\r\n    }\r\n});","UI.registerHelper('getGlobal', function(varName) {\r\n    return Globals[varName];\r\n});\r\n\r\nUI.registerHelper('setTitle', function(title){\r\n    if(!title){\r\n        title = Globals.appName;\r\n    }\r\n    else{\r\n        title += \" - \" + Globals.appName;\r\n    }\r\n\r\n    document.title = title;\r\n});\r\n\r\n","Globals = {\r\n    appName: \"GFaim\",\r\n    appSlogan: \"L'application qui comble votre faim !\",\r\n    // Nous stockerons également nos schémas ici\r\n    schemas: {}\r\n};","Utils = {\r\n    formatDate: function(date) {\r\n        var date = new Date(date);\r\n\r\n        var day = date.getDate().toString();\r\n        var month = (date.getMonth() + 1).toString();\r\n        var year = date.getFullYear();\r\n\r\n        if (day.length === 1) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        if (month.length === 1) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        return day + '/' + month + '/' + year;\r\n    },\r\n\r\n    pathFor: function(routeName, params){\r\n        // Similaire au helper \"pathFor\", mais utilisable directement dans le code\r\n        var route = Router.routes[routeName].path(params);\r\n        return route;\r\n    }\r\n};","Router.configure({\r\n    layoutTemplate: 'mainLayout'\r\n});\r\n\r\nRouter.route('/', {\r\n    name: 'accueil',\r\n    template: \"accueil\"\r\n});\r\n\r\nRouter.route('/enreg', {\r\n    name: \"user.enreg\",\r\n    template: \"enreg\"\r\n});\r\n\r\nRouter.route('/connexion', {\r\n    name: \"user.connexion\",\r\n    template: \"connexion\"\r\n});\r\n","// Schéma du profil\r\nGlobals.schemas.UserProfile = new SimpleSchema({\r\n    firstName: {\r\n        type: String,\r\n        regEx: /^[a-zA-Z-]{2,25}/,\r\n        optional: true,\r\n        label: \"Prénom\"\r\n    },\r\n    lastName: {\r\n        type: String,\r\n        regEx: /^[a-zA-Z-]{2,25}/,\r\n        optional: true,\r\n        label: \"Nom\"\r\n    },\r\n    birthDay: {\r\n        type: Date,\r\n        optional: true,\r\n        label: \"Date de naissance\"\r\n    },\r\n    gender: {\r\n        type: String,\r\n        allowedValues: ['M', 'F'],\r\n        optional: true,\r\n        label: \"Genre\",\r\n        autoform: {\r\n            afFieldInput: {\r\n                type: \"select2\", // type de champ particulier, voir plus bas\r\n                options: [\r\n                    {\r\n                        value: \"M\",\r\n                        label: \"Homme\"\r\n                    },\r\n                    {\r\n                        value: \"F\",\r\n                        label: \"Femme\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    organization: {\r\n        type: String,\r\n        regEx: /^[a-z0-9A-Z .]{3,30}$/,\r\n        optional: true,\r\n        label: \"Organisation\"\r\n    },\r\n    website: {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Url,\r\n        optional: true,\r\n        label: \"Site Web\"\r\n    },\r\n    bio: {\r\n        type: String,\r\n        optional: true,\r\n        label: \"Biographie\",\r\n        autoform: {\r\n            afFieldInput: {\r\n                type: \"textarea\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// Schéma principal\r\nGlobals.schemas.User = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        regEx: /^[a-z0-9A-Z_]{3,15}$/,\r\n        label: \"Nom d'utilisateur\"\r\n    },\r\n    password: {\r\n        type: String,\r\n        label: \"Mot de passe\",\r\n        optional: true,\r\n        autoform: {\r\n            afFieldInput: {\r\n                type: \"password\"\r\n            }\r\n        }\r\n    },\r\n    confirmation: {\r\n        type: String,\r\n        label: \"Confirmation\",\r\n        optional: true,\r\n        custom: function(){\r\n            if(this.value !== this.field('password').value){\r\n                return \"passwordMissmatch\";\r\n            }\r\n        },\r\n        autoform: {\r\n            afFieldInput: {\r\n                type: \"password\"\r\n            }\r\n        }\r\n    },\r\n    emails: {\r\n        type: [Object],\r\n        optional: false,\r\n        label: \"Adresses Email\"\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email,\r\n        label: \"Adresse\"\r\n    },\r\n    \"emails.$.verified\": {\r\n        type: Boolean,\r\n        optional: true,\r\n        autoform: {\r\n            omit: true\r\n        }\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        autoValue: function () {\r\n            if (this.isInsert) {\r\n                return new Date;\r\n            } else {\r\n                this.unset();\r\n            }\r\n        },\r\n        autoform: {\r\n            omit: true\r\n        }\r\n    },\r\n    profile: {\r\n        type: Globals.schemas.UserProfile,\r\n        optional: true,\r\n\r\n    },\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true,\r\n        autoform:{\r\n            omit: true\r\n        }\r\n    },\r\n    roles: {\r\n        type: [String],\r\n        optional: true,\r\n        autoform: {\r\n            omit: true\r\n        }\r\n    }\r\n});\r\n\r\n// On attache ce schéma à la collection\r\nMeteor.users.attachSchema(Globals.schemas.User);"]}}]